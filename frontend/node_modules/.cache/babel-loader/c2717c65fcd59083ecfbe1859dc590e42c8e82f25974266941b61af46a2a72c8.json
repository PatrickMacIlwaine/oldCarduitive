{"ast":null,"code":"var _jsxFileName = \"/Users/Patrick/CodingFolder/Projects/psychic/frontend/src/components/StartPage.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { Navigate, useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction StartPage() {\n  _s();\n  let navigate = useNavigate();\n  const [key, setKey] = useState();\n  const generateKey = () => {\n    const url = '';\n    let key = '';\n    const possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n    for (let i = 0; i < 5; i++) {\n      key += possible.charAt(Math.floor(Math.random() * possible.length));\n    }\n    return key;\n  };\n  function starthandleClick() {\n    const newKey = generateKey();\n    localStorage.setItem('userID', 'something');\n    navigate(`game/${newKey}`);\n  }\n  const startGame = async roomId => {\n    return fetch(`http://localhost:3001/game/create/${roomId}`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \" Psychic! \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: starthandleClick,\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \" Start New Game !\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 3\n  }, this);\n}\n_s(StartPage, \"y5JWVukucEqI2jf6OrefcgG/bBI=\", false, function () {\n  return [useNavigate];\n});\n_c = StartPage;\nexport default StartPage;\nvar _c;\n$RefreshReg$(_c, \"StartPage\");","map":{"version":3,"names":["useState","Navigate","useNavigate","jsxDEV","_jsxDEV","StartPage","_s","navigate","key","setKey","generateKey","url","possible","i","charAt","Math","floor","random","length","starthandleClick","newKey","localStorage","setItem","startGame","roomId","fetch","method","headers","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/Patrick/CodingFolder/Projects/psychic/frontend/src/components/StartPage.js"],"sourcesContent":["import { useState } from 'react';\nimport { Navigate, useNavigate } from 'react-router-dom';\n\n\nfunction StartPage(){\n\n\n\n  let navigate = useNavigate();\n  const [key, setKey] = useState()\n\n  \n\n  const generateKey = () => {\n    const url = '' \n    let key = '';\n    const possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n    for (let i = 0; i < 5; i++) {\n      key += possible.charAt(Math.floor(Math.random() * possible.length));\n    }\n    return key;\n  };\n\n \n  function starthandleClick(){\n\n    const newKey = generateKey();\n    localStorage.setItem('userID','something')\n    navigate(`game/${newKey}`);\n  }\n\n\n  const startGame = async (roomId) => {\n    return fetch(`http://localhost:3001/game/create/${roomId}`, {\n      method: 'POST',\n      headers: {\n        'Content-Type' : 'application/json',\n      },\n    });\n  }\n\n\n  \n\nreturn (\n  <div>\n    \n    <h1> Psychic! </h1>\n    \n    <div>\n    \n    <button onClick={starthandleClick}>\n      <h2> Start New Game !</h2>\n    </button> \n    </div>\n\n\n </div>\n\n  \n);\n    \n}\nexport default StartPage;"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,QAAQ,EAAEC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGzD,SAASC,SAASA,CAAA,EAAE;EAAAC,EAAA;EAIlB,IAAIC,QAAQ,GAAGL,WAAW,CAAC,CAAC;EAC5B,MAAM,CAACM,GAAG,EAAEC,MAAM,CAAC,GAAGT,QAAQ,CAAC,CAAC;EAIhC,MAAMU,WAAW,GAAGA,CAAA,KAAM;IACxB,MAAMC,GAAG,GAAG,EAAE;IACd,IAAIH,GAAG,GAAG,EAAE;IACZ,MAAMI,QAAQ,GAAG,gEAAgE;IACjF,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAE,EAAE;MAC1BL,GAAG,IAAII,QAAQ,CAACE,MAAM,CAACC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAGL,QAAQ,CAACM,MAAM,CAAC,CAAC;IACrE;IACA,OAAOV,GAAG;EACZ,CAAC;EAGD,SAASW,gBAAgBA,CAAA,EAAE;IAEzB,MAAMC,MAAM,GAAGV,WAAW,CAAC,CAAC;IAC5BW,YAAY,CAACC,OAAO,CAAC,QAAQ,EAAC,WAAW,CAAC;IAC1Cf,QAAQ,CAAE,QAAOa,MAAO,EAAC,CAAC;EAC5B;EAGA,MAAMG,SAAS,GAAG,MAAOC,MAAM,IAAK;IAClC,OAAOC,KAAK,CAAE,qCAAoCD,MAAO,EAAC,EAAE;MAC1DE,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAG;MACnB;IACF,CAAC,CAAC;EACJ,CAAC;EAKH,oBACEvB,OAAA;IAAAwB,QAAA,gBAEExB,OAAA;MAAAwB,QAAA,EAAI;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAEnB5B,OAAA;MAAAwB,QAAA,eAEAxB,OAAA;QAAQ6B,OAAO,EAAEd,gBAAiB;QAAAS,QAAA,eAChCxB,OAAA;UAAAwB,QAAA,EAAI;QAAiB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACpB;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAGJ,CAAC;AAKP;AAAC1B,EAAA,CA1DQD,SAAS;EAAA,QAIDH,WAAW;AAAA;AAAAgC,EAAA,GAJnB7B,SAAS;AA2DlB,eAAeA,SAAS;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}