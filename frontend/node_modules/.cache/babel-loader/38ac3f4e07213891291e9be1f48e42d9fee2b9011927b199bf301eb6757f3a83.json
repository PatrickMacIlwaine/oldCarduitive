{"ast":null,"code":"var _jsxFileName = \"/Users/Patrick/CodingFolder/Projects/psychic/frontend/src/components/InGameRendering.jsx\";\nimport React from 'react';\nimport classes from './InGameRendering.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction InGameRendering({\n  roomData,\n  show1,\n  show2,\n  show3,\n  removeNumberFromArray,\n  playerID,\n  roomId\n}) {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: !roomData.won && !roomData.lost && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: !show3 && !show2 && !show1 && roomData.gameStarted && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.lastPlayed,\n          children: [\"Last Played Card :\", ' ', /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.number,\n            children: String(roomData.lastPlayedCard)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.miniCardContainer,\n          children: roomData.players.map((playerData, index) => playerID != index && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.miniCardPlayer,\n            children: playerData.numbers.map(numIndex => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: classes.miniCard,\n              children: [' ', \"?\", ' ']\n            }, numIndex, true, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 27\n            }, this))\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 23\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 15\n        }, this), roomData.players.map((playerData, index) => playerID == index && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.cardContainer,\n          children: playerData.numbers.map((num, numIndex) => /*#__PURE__*/_jsxDEV(\"button\", {\n            className: classes.card,\n            onClick: () => removeNumberFromArray(roomId, index, num),\n            children: num\n          }, numIndex, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 25\n          }, this))\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n_c = InGameRendering;\nInGameRendering.propTypes = {\n  roomData: PropTypes.shape({\n    won: PropTypes.bool.isRequired,\n    lost: PropTypes.bool.isRequired,\n    gameStarted: PropTypes.bool.isRequired\n  }).isRequired,\n  show1: PropTypes.bool.isRequired,\n  show2: PropTypes.bool.isRequired,\n  show3: PropTypes.bool.isRequired,\n  removeNumberFromArray: PropTypes.func.isRequired,\n  playerID: Proptypes.num.isRe\n};\nexport default InGameRendering;\nvar _c;\n$RefreshReg$(_c, \"InGameRendering\");","map":{"version":3,"names":["React","classes","jsxDEV","_jsxDEV","Fragment","_Fragment","InGameRendering","roomData","show1","show2","show3","removeNumberFromArray","playerID","roomId","children","won","lost","gameStarted","className","lastPlayed","number","String","lastPlayedCard","fileName","_jsxFileName","lineNumber","columnNumber","miniCardContainer","players","map","playerData","index","miniCardPlayer","numbers","numIndex","miniCard","cardContainer","num","card","onClick","_c","propTypes","PropTypes","shape","bool","isRequired","func","Proptypes","isRe","$RefreshReg$"],"sources":["/Users/Patrick/CodingFolder/Projects/psychic/frontend/src/components/InGameRendering.jsx"],"sourcesContent":["import React from 'react';\nimport classes from './InGameRendering.module.css';\n\nfunction InGameRendering({\n  roomData,\n  show1,\n  show2,\n  show3,\n  removeNumberFromArray,\n  playerID,\n  roomId,\n}) {\n  return (\n    <>\n      {!roomData.won && !roomData.lost && (\n        <div>\n          {!show3 && !show2 && !show1 && roomData.gameStarted && (\n            <div>\n              <div className={classes.lastPlayed}>\n                Last Played Card :{' '}\n                <div className={classes.number}>\n                  {String(roomData.lastPlayedCard)}\n                </div>\n              </div>\n\n              <div className={classes.miniCardContainer}>\n                {roomData.players.map(\n                  (playerData, index) =>\n                    playerID != index && (\n                      <div className={classes.miniCardPlayer} key={index}>\n                        {playerData.numbers.map((numIndex) => (\n                          <div className={classes.miniCard} key={numIndex}>\n                            {' '}\n                            ?{' '}\n                          </div>\n                        ))}\n                      </div>\n                    )\n                )}\n              </div>\n\n              {roomData.players.map(\n                (playerData, index) =>\n                  playerID == index && (\n                    <div className={classes.cardContainer} key={index}>\n                      {playerData.numbers.map((num, numIndex) => (\n                        <button\n                          className={classes.card}\n                          key={numIndex}\n                          onClick={() =>\n                            removeNumberFromArray(roomId, index, num)\n                          }\n                        >\n                          {num}\n                        </button>\n                      ))}\n                    </div>\n                  )\n              )}\n            </div>\n          )}\n        </div>\n      )}\n    </>\n  );\n}\n\nInGameRendering.propTypes = {\n  roomData: PropTypes.shape({\n    won: PropTypes.bool.isRequired,\n    lost: PropTypes.bool.isRequired,\n    gameStarted: PropTypes.bool.isRequired,\n  }).isRequired,\n  show1: PropTypes.bool.isRequired,\n  show2: PropTypes.bool.isRequired,\n  show3: PropTypes.bool.isRequired,\n  removeNumberFromArray: PropTypes.func.isRequired,\n  playerID: Proptypes.num.isRe\n\n};\n\nexport default InGameRendering;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}