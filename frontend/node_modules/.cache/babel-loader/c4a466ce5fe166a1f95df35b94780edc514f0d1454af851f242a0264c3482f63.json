{"ast":null,"code":"var _jsxFileName = \"/Users/Patrick/CodingFolder/Projects/psychic/frontend/src/components/InGameRendering.jsx\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classes from './InGameRendering.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction InGameRendering({\n  roomData,\n  show1,\n  show2,\n  show3,\n  removeNumberFromArray,\n  playerID,\n  roomId\n}) {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [' ', !roomData.won && !roomData.lost && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: !show3 && !show2 && !show1 && roomData.gameStarted && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.lastPlayed,\n          children: [\"Last Played Card :\", ' ', /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.number,\n            children: String(roomData.lastPlayedCard)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.miniCardContainer,\n          children: roomData.players.map(playerData => playerID !== playerData.id && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.miniCardPlayer,\n            children: playerData.numbers.map(num => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: classes.miniCard,\n              children: [' ', \"?\", ' ']\n            }, num, true, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 27\n            }, this))\n          }, playerData.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 23\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 15\n        }, this), roomData.players.map(playerData => playerID === playerData.id && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.cardContainer,\n          children: playerData.numbers.map(num => /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: classes.card,\n            onClick: () => removeNumberFromArray(roomId, playerData.id, num),\n            children: num\n          }, num, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 25\n          }, this))\n        }, playerData.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n_c = InGameRendering;\nInGameRendering.propTypes = {\n  roomData: PropTypes.shape({\n    won: PropTypes.bool.isRequired,\n    lost: PropTypes.bool.isRequired,\n    gameStarted: PropTypes.bool.isRequired,\n    lastPlayedCard: PropTypes.number.isRequired,\n    players: PropTypes.arrayOf(PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      numbers: PropTypes.arrayOf(PropTypes.number).isRequired\n    })).isRequired\n  }).isRequired,\n  show1: PropTypes.bool.isRequired,\n  show2: PropTypes.bool.isRequired,\n  show3: PropTypes.bool.isRequired,\n  removeNumberFromArray: PropTypes.func.isRequired,\n  playerID: PropTypes.number.isRequired,\n  roomId: PropTypes.string.isRequired\n};\nexport default InGameRendering;\nvar _c;\n$RefreshReg$(_c, \"InGameRendering\");","map":{"version":3,"names":["React","PropTypes","classes","jsxDEV","_jsxDEV","Fragment","_Fragment","InGameRendering","roomData","show1","show2","show3","removeNumberFromArray","playerID","roomId","children","won","lost","gameStarted","className","lastPlayed","number","String","lastPlayedCard","fileName","_jsxFileName","lineNumber","columnNumber","miniCardContainer","players","map","playerData","id","miniCardPlayer","numbers","num","miniCard","cardContainer","type","card","onClick","_c","propTypes","shape","bool","isRequired","arrayOf","func","string","$RefreshReg$"],"sources":["/Users/Patrick/CodingFolder/Projects/psychic/frontend/src/components/InGameRendering.jsx"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport classes from './InGameRendering.module.css';\n\nfunction InGameRendering({\n  roomData,\n  show1,\n  show2,\n  show3,\n  removeNumberFromArray,\n  playerID,\n  roomId,\n}) {\n  return (\n    <>\n      {' '}\n      {!roomData.won && !roomData.lost && (\n        <div>\n          {!show3 && !show2 && !show1 && roomData.gameStarted && (\n            <div>\n              <div className={classes.lastPlayed}>\n                Last Played Card :{' '}\n                <div className={classes.number}>\n                  {String(roomData.lastPlayedCard)}\n                </div>\n              </div>\n              <div className={classes.miniCardContainer}>\n                {roomData.players.map(\n                  (playerData) =>\n                    playerID !== playerData.id && (\n                      <div\n                        className={classes.miniCardPlayer}\n                        key={playerData.id}\n                      >\n                        {playerData.numbers.map((num) => (\n                          <div className={classes.miniCard} key={num}>\n                            {' '}\n                            ?{' '}\n                          </div>\n                        ))}\n                      </div>\n                    ),\n                )}\n              </div>\n              {roomData.players.map(\n                (playerData) =>\n                  playerID === playerData.id && (\n                    <div className={classes.cardContainer} key={playerData.id}>\n                      {playerData.numbers.map((num) => (\n                        <button\n                          type=\"button\"\n                          className={classes.card}\n                          key={num}\n                          onClick={() =>\n                            removeNumberFromArray(roomId, playerData.id, num)}\n                        >\n                          {num}\n                        </button>\n                      ))}\n                    </div>\n                  )\n              )}\n            </div>\n          )}\n        </div>\n      )}\n    </>\n  );\n}\n\nInGameRendering.propTypes = {\n  roomData: PropTypes.shape({\n    won: PropTypes.bool.isRequired,\n    lost: PropTypes.bool.isRequired,\n    gameStarted: PropTypes.bool.isRequired,\n    lastPlayedCard: PropTypes.number.isRequired,\n    players: PropTypes.arrayOf(\n      PropTypes.shape({\n        id: PropTypes.number.isRequired,\n        numbers: PropTypes.arrayOf(PropTypes.number).isRequired,\n      })\n    ).isRequired,\n  }).isRequired,\n  show1: PropTypes.bool.isRequired,\n  show2: PropTypes.bool.isRequired,\n  show3: PropTypes.bool.isRequired,\n  removeNumberFromArray: PropTypes.func.isRequired,\n  playerID: PropTypes.number.isRequired,\n  roomId: PropTypes.string.isRequired,\n};\n\nexport default InGameRendering;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}