{"ast":null,"code":"var _jsxFileName = \"/Users/Patrick/CodingFolder/Projects/psychic/frontend/src/components/PlayingGame.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PlayingGame(props) {\n  _s();\n  const {\n    roomId\n  } = useParams();\n  const userID = localStorage.getItem('userID');\n  console.log(roomId);\n  console.log(userID);\n  const [roomData, setRoomData] = useState(null);\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState('');\n  const createRoom = async () => {\n    if (roomId) {\n      await fetch(`/game/create/${roomId}`, {\n        method: 'POST'\n      });\n    }\n  };\n  const fetchRoomData = async roomId => {\n    try {\n      const response = await fetch(`/game/data/${roomId}`);\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      const data = await response.json();\n      return data;\n    } catch (error) {\n      console.error('Error fetching room data:', error);\n      return null;\n    }\n  };\n  function deleteRoom(roomId) {\n    return fetch(`http://localhost:3001/message/${roomId}`, {\n      method: 'DELETE'\n    });\n  }\n  useEffect(() => {\n    console.log(`Room ID : ${roomId}`);\n    const intervalID = setInterval(() => {\n      fetchMessages(roomId).then(setMessages);\n    }, 500);\n    return () => clearInterval(intervalID);\n  }, [roomId]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"In the Game Now\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\" Chat Room : \", roomId]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\" User ID : \", userID, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \" Cards : \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => createRoom(roomId),\n      children: \"Create the new Room.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 3\n  }, this);\n}\n_s(PlayingGame, \"opoVsxTd0uVyIWi0RAlR8lXniIA=\", false, function () {\n  return [useParams];\n});\n_c = PlayingGame;\nexport default PlayingGame;\nvar _c;\n$RefreshReg$(_c, \"PlayingGame\");","map":{"version":3,"names":["React","useEffect","useState","useParams","jsxDEV","_jsxDEV","PlayingGame","props","_s","roomId","userID","localStorage","getItem","console","log","roomData","setRoomData","messages","setMessages","newMessage","setNewMessage","createRoom","fetch","method","fetchRoomData","response","ok","Error","status","data","json","error","deleteRoom","intervalID","setInterval","fetchMessages","then","clearInterval","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/Patrick/CodingFolder/Projects/psychic/frontend/src/components/PlayingGame.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\n\n\n\nfunction PlayingGame(props){\n\n  const { roomId }= useParams();\n  const userID = localStorage.getItem('userID');\n  console.log(roomId);\n  console.log(userID);\n\n\n\n  const [roomData, setRoomData] = useState(null);\n\n  \n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState('');\n\n\n  const createRoom = async () => {\n    if (roomId) {\n      await fetch(`/game/create/${roomId}`, {\n        method: 'POST',\n      });\n    }\n  }\n\n\n  const fetchRoomData = async (roomId) => {\n    try {\n      const response = await fetch(`/game/data/${roomId}`);\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      const data = await response.json();\n      return data;\n    } catch (error) {\n      console.error('Error fetching room data:', error);\n      return null;\n    }\n  }\n  \n\n\n\n  function deleteRoom(roomId) {\n    return fetch(`http://localhost:3001/message/${roomId}`, {\n      method: 'DELETE',\n    });\n  }\n\n  useEffect(() =>  {\n\n    console.log(`Room ID : ${roomId}`);\n    const intervalID = setInterval(() => {\n      fetchMessages(roomId).then(setMessages);\n    }, 500);\n\n    return () => clearInterval(intervalID);\n  }, [roomId]);\n\n \n  \n\n\nreturn (\n  <div> \n    <h1>In the Game Now</h1>\n    <h2> Chat Room : {roomId}</h2>\n    <h2> User ID : {userID} </h2>\n    <h2> Cards : </h2>\n    \n\n    <button onClick={() => createRoom(roomId)}>Create the new Room.</button>\n\n    \n  </div>\n\n);\n}\nexport default PlayingGame;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}