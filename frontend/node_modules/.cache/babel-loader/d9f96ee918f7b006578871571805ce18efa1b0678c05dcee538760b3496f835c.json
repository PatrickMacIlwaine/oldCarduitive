{"ast":null,"code":"var _jsxFileName = \"/Users/Patrick/CodingFolder/Projects/psychic/frontend/src/components/PlayingGame.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { Link, json, useParams } from \"react-router-dom\";\nimport { Navigate, useNavigate, useLocation } from \"react-router-dom\";\nimport classes from \"./PlayingGame.module.css\";\nimport LostPage from \"./LostPage\";\nimport WonPage from \"./WonPage\";\nimport InGameRendering from \"./InGameRendering\";\nimport BeforeGameStarts from \"./BeforeGameStarts\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction PlayingGame(props) {\n  _s();\n  const {\n    roomId\n  } = useParams();\n  const [playerID, setPlayerID] = useState(0);\n  const [ready, setReady] = useState(false);\n  const [isCopied, setIsCopied] = useState(false);\n  const [numberOfPlayers, setnumberOfPlayers] = useState(false);\n  const [roomData, setRoomData] = useState(null);\n  const location = useLocation();\n  const [didCountDown, setdidCountDown] = useState(false);\n  const [show1, setshow1] = useState(false);\n  const [show2, setshow2] = useState(false);\n  const [show3, setshow3] = useState(false);\n  const [error, seterror] = useState(null);\n  const frontport = process.env.REACT_APP_FRONTPORT || \"http://localhost/3000/\";\n  const backport = process.env.REACT_APP_BACKPORT || \"http://localhost/3001\";\n  let navigate = useNavigate();\n  const fetchRoomData = async roomId => {\n    return fetch(`${backport}game/data/${roomId}`).then(response => {\n      if (!response.ok) {\n        throw new Error(`HTTP error! status : ${response.status}`);\n      }\n      return response.json();\n    }).catch(e => {\n      seterror(e.message);\n      console.error(\"There was a problem with your fetch operation \" + e.message);\n    });\n  };\n  const addReadyPerson = async roomId => {\n    try {\n      const response = await fetch(`${backport}game/ready/${roomId}`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      }).catch(e => console.error(\"Error:\", e));\n      if (!response.ok) {\n        throw new Error(`HTTP error! Status : ${response}`);\n      }\n      const responseData = await response.json();\n      const varPlayerID = responseData.readyPlayersCount;\n      setPlayerID(varPlayerID - 1);\n    } catch (e) {\n      console.error(\"Error:\", e);\n      throw e;\n    }\n  };\n  useEffect(() => {\n    console.log(\"player ID: \");\n    console.log(playerID);\n  }, [playerID]);\n  const removeNumberFromArray = async (roomId, playerId, numberToRemove) => {\n    return fetch(`${backport}game/data/${roomId}`, {\n      method: \"PATCH\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        playerId,\n        numberToRemove\n      })\n    });\n  };\n  const setLevel = async (roomId, level) => {\n    return fetch(`${backport}game/resetLevel/${roomId}`, {\n      method: \"PATCH\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        level\n      })\n    });\n  };\n  const startGame = async (roomId, numberOfPlayers) => {\n    return fetch(`${backport}game/create/${roomId}`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        numberOfPlayers\n      })\n    });\n  };\n  const resetReadyStatus = async roomId => {\n    return fetch(`${backport}/game/resetReady/${roomId}`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n  };\n  useEffect(() => {\n    const intervalID = setInterval(() => {\n      fetchRoomData(roomId).then(data => {\n        if (data) {\n          setRoomData(data);\n          if (data.playersReady === data.playerCount) {\n            if (!didCountDown) {\n              countDown();\n              setdidCountDown(true);\n            }\n          }\n        }\n      });\n    }, 120);\n    return () => clearInterval(intervalID);\n  }, [roomId, numberOfPlayers, countDown]);\n  function handleClickReady() {\n    addReadyPerson(roomId);\n    setReady(true);\n    setdidCountDown(false);\n  }\n  async function handelPlayAgain() {\n    setLevel(roomId, 1);\n    startGame(roomId, numberOfPlayers);\n  }\n  async function handelContinue() {\n    setLevel(roomId, roomData.level + 1);\n    startGame(roomId, numberOfPlayers);\n  }\n  function handleCopyClick() {\n    setIsCopied(true);\n    setTimeout(() => setIsCopied(false), 2000);\n  }\n  function countDown() {\n    setshow3(true);\n    setTimeout(() => {\n      setshow3(false);\n      setshow2(true);\n    }, 1000);\n    setTimeout(() => {\n      setshow2(false);\n      setshow1(true);\n    }, 2000);\n    setTimeout(() => {\n      setshow1(false);\n    }, 3000);\n    setTimeout(() => setReady(false), 4000);\n    setTimeout(() => setIsCopied(false), 5000);\n    setdidCountDown(true);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"Error : \", error, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: frontport,\n        children: \"Return to home\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 7\n    }, this);\n  }\n  if (roomData && roomData.won) {\n    return /*#__PURE__*/_jsxDEV(WonPage, {\n      won: roomData.won,\n      level: roomData.level,\n      handelContinue: handelContinue\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 7\n    }, this);\n  }\n  if (roomData && roomData.lost) {\n    return /*#__PURE__*/_jsxDEV(LostPage, {\n      lost: roomData.lost,\n      level: roomData.level,\n      handelPlayAgain: handelPlayAgain,\n      lastPlayedCard: roomData.lastPlayedCard\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 7\n    }, this);\n  }\n  if (roomData && !roomData.lost && roomData.gamestarted) {\n    return /*#__PURE__*/_jsxDEV(BeforeGameStarts, {\n      roomData: roomData,\n      isCopied: isCopied,\n      handleCopyClick: handleCopyClick,\n      ready: ready,\n      handleClickReady: handleClickReady,\n      show1: show1,\n      show2: show2,\n      show3: show3\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: roomData ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(BeforeGameStarts, {\n          roomData: roomData,\n          isCopied: isCopied,\n          handleCopyClick: handleCopyClick,\n          ready: ready,\n          handleClickReady: handleClickReady,\n          show1: show1,\n          show2: show2,\n          show3: show3\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(InGameRendering, {\n          roomData: roomData,\n          show1: show1,\n          show2: show2,\n          show3: show3,\n          removeNumberFromArray: removeNumberFromArray,\n          playerID: playerID,\n          roomId: roomId\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 215,\n    columnNumber: 5\n  }, this);\n}\n_s(PlayingGame, \"RUpMjzOE4sokuonPajdvjCEOjN4=\", false, function () {\n  return [useParams, useLocation, useNavigate];\n});\n_c = PlayingGame;\nexport default PlayingGame;\nvar _c;\n$RefreshReg$(_c, \"PlayingGame\");","map":{"version":3,"names":["React","useEffect","useState","Link","json","useParams","Navigate","useNavigate","useLocation","classes","LostPage","WonPage","InGameRendering","BeforeGameStarts","jsxDEV","_jsxDEV","Fragment","_Fragment","PlayingGame","props","_s","roomId","playerID","setPlayerID","ready","setReady","isCopied","setIsCopied","numberOfPlayers","setnumberOfPlayers","roomData","setRoomData","location","didCountDown","setdidCountDown","show1","setshow1","show2","setshow2","show3","setshow3","error","seterror","frontport","process","env","REACT_APP_FRONTPORT","backport","REACT_APP_BACKPORT","navigate","fetchRoomData","fetch","then","response","ok","Error","status","catch","e","message","console","addReadyPerson","method","headers","responseData","varPlayerID","readyPlayersCount","log","removeNumberFromArray","playerId","numberToRemove","body","JSON","stringify","setLevel","level","startGame","resetReadyStatus","intervalID","setInterval","data","playersReady","playerCount","countDown","clearInterval","handleClickReady","handelPlayAgain","handelContinue","handleCopyClick","setTimeout","children","fileName","_jsxFileName","lineNumber","columnNumber","to","won","lost","lastPlayedCard","gamestarted","_c","$RefreshReg$"],"sources":["/Users/Patrick/CodingFolder/Projects/psychic/frontend/src/components/PlayingGame.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Link, json, useParams } from \"react-router-dom\";\nimport { Navigate, useNavigate, useLocation } from \"react-router-dom\";\nimport classes from \"./PlayingGame.module.css\";\n\n\nimport LostPage from \"./LostPage\";\nimport WonPage from \"./WonPage\";\nimport InGameRendering from \"./InGameRendering\";\nimport BeforeGameStarts from \"./BeforeGameStarts\";\n\nfunction PlayingGame(props) {\n  const { roomId } = useParams();\n  const [playerID, setPlayerID] = useState(0);\n  const [ready, setReady] = useState(false);\n  const [isCopied, setIsCopied] = useState(false);\n  const [numberOfPlayers, setnumberOfPlayers] = useState(false);\n  const [roomData, setRoomData] = useState(null);\n  const location = useLocation();\n  const [didCountDown, setdidCountDown] = useState(false);\n\n  const [show1, setshow1] = useState(false);\n  const [show2, setshow2] = useState(false);\n  const [show3, setshow3] = useState(false);\n\n  const [error, seterror] = useState(null);\n\n  const frontport = process.env.REACT_APP_FRONTPORT || \"http://localhost/3000/\";\n  const backport = process.env.REACT_APP_BACKPORT || \"http://localhost/3001\";\n\n  let navigate = useNavigate();\n\n  const fetchRoomData = async (roomId) => {\n    return fetch(`${backport}game/data/${roomId}`)\n      .then((response) => {\n        if (!response.ok) {\n          throw new Error(`HTTP error! status : ${response.status}`);\n        }\n        return response.json();\n      })\n      .catch((e) => {\n        seterror(e.message);\n        console.error(\n          \"There was a problem with your fetch operation \" + e.message\n        );\n      });\n  };\n\n  const addReadyPerson = async (roomId) => {\n    try {\n      const response = await fetch(`${backport}game/ready/${roomId}`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      }).catch((e) => console.error(\"Error:\", e));\n      if (!response.ok) {\n        throw new Error(`HTTP error! Status : ${response}`);\n      }\n      const responseData = await response.json();\n      const varPlayerID = responseData.readyPlayersCount;\n      setPlayerID(varPlayerID - 1);\n    } catch (e) {\n      console.error(\"Error:\", e);\n      throw e;\n    }\n  };\n\n  useEffect(() => {\n    console.log(\"player ID: \");\n    console.log(playerID);\n  }, [playerID]);\n\n  const removeNumberFromArray = async (roomId, playerId, numberToRemove) => {\n    return fetch(`${backport}game/data/${roomId}`, {\n      method: \"PATCH\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ playerId, numberToRemove }),\n    });\n  };\n\n  const setLevel = async (roomId, level) => {\n    return fetch(`${backport}game/resetLevel/${roomId}`, {\n      method: \"PATCH\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ level }),\n    });\n  };\n\n  const startGame = async (roomId, numberOfPlayers) => {\n    return fetch(`${backport}game/create/${roomId}`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ numberOfPlayers }),\n    });\n  };\n\n  const resetReadyStatus = async (roomId) => {\n    return fetch(`${backport}/game/resetReady/${roomId}`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    });\n  };\n\n  useEffect(() => {\n    const intervalID = setInterval(() => {\n      fetchRoomData(roomId).then((data) => {\n        if (data) {\n        setRoomData(data);\n        if (data.playersReady === data.playerCount) {\n          if (!didCountDown) {\n            countDown();\n            setdidCountDown(true);\n          }\n        }\n      } \n      });\n    }, 120);\n    return () => clearInterval(intervalID);\n  }, [roomId, numberOfPlayers, countDown]);\n\n  function handleClickReady() {\n    addReadyPerson(roomId);\n    setReady(true);\n    setdidCountDown(false);\n  }\n\n  async function handelPlayAgain() {\n    setLevel(roomId, 1);\n    startGame(roomId, numberOfPlayers);\n  }\n\n  async function handelContinue() {\n    setLevel(roomId, roomData.level + 1);\n    startGame(roomId, numberOfPlayers);\n  }\n\n  function handleCopyClick() {\n    setIsCopied(true);\n    setTimeout(() => setIsCopied(false), 2000);\n  }\n\n  function countDown() {\n    setshow3(true);\n    setTimeout(() => {\n      setshow3(false);\n      setshow2(true);\n    }, 1000);\n    setTimeout(() => {\n      setshow2(false);\n      setshow1(true);\n    }, 2000);\n    setTimeout(() => {\n      setshow1(false);\n    }, 3000);\n    setTimeout(() => setReady(false), 4000);\n    setTimeout(() => setIsCopied(false), 5000);\n    setdidCountDown(true);\n  }\n\n  if (error) {\n    return (\n      <div>\n        <h1>Error : {error} </h1>\n        <Link to={frontport}>Return to home</Link>\n      </div>\n    );\n  }\n\n  if (roomData && roomData.won) {\n    return (\n      <WonPage\n        won={roomData.won}\n        level={roomData.level}\n        handelContinue={handelContinue}\n      />\n    );\n  }\n\n  if (roomData && roomData.lost) {\n    return (\n      <LostPage\n        lost={roomData.lost}\n        level={roomData.level}\n        handelPlayAgain={handelPlayAgain}\n        lastPlayedCard={roomData.lastPlayedCard}\n      />\n    );\n  }\n\n  if (roomData && !roomData.lost && roomData.gamestarted) {\n    return (\n      <BeforeGameStarts\n        roomData={roomData}\n        isCopied={isCopied}\n        handleCopyClick={handleCopyClick}\n        ready={ready}\n        handleClickReady={handleClickReady}\n        show1={show1}\n        show2={show2}\n        show3={show3}\n      />\n    );\n  }\n\n  return (\n    <div>\n      <div>\n        {roomData ? (\n          <>\n            <BeforeGameStarts\n              roomData={roomData}\n              isCopied={isCopied}\n              handleCopyClick={handleCopyClick}\n              ready={ready}\n              handleClickReady={handleClickReady}\n              show1={show1}\n              show2={show2}\n              show3={show3}\n            />\n\n            <InGameRendering\n              roomData={roomData}\n              show1={show1}\n              show2={show2}\n              show3={show3}\n              removeNumberFromArray={removeNumberFromArray}\n              playerID={playerID}\n              roomId={roomId}\n            />\n          </>\n        ) : (\n          <div>Loading...</div>\n        )}\n      </div>\n    </div>\n  );\n}\nexport default PlayingGame;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}