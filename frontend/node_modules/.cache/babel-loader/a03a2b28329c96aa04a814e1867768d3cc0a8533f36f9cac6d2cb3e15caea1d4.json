{"ast":null,"code":"var _jsxFileName = \"/Users/Patrick/CodingFolder/Projects/psychic/frontend/src/components/StartPage.jsx\",\n  _s = $RefreshSig$();\nimport { React, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport classes from './StartPage.module.css';\nimport HowToPlay from './HowToPlay';\nimport Backdrop from './Backdrop';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction StartPage() {\n  _s();\n  const navigate = useNavigate();\n  const [startGamePressed, setstartGamePressed] = useState(false);\n  const [loading, setloading] = useState(false);\n  const [modalIsOpen, setModalIsOpen] = useState(false);\n  const backport = process.env.REACT_APP_BACKPORT || 'https://card-backend-bb5d6df47bd0.herokuapp.com/';\n  function handelHowToPlay() {\n    setModalIsOpen(true);\n  }\n  function closeModalHandler() {\n    setModalIsOpen(false);\n  }\n  const generateKey = () => {\n    let key = '';\n    const possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n    for (let i = 0; i < 5; i += 1) {\n      key += possible.charAt(Math.floor(Math.random() * possible.length));\n    }\n    return key;\n  };\n  const startGame = async (roomId, numberOfPlayers) => {\n    return fetch(`${backport}game/create/${roomId}`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        numberOfPlayers\n      })\n    });\n  };\n  const pageExists = async roomId => fetch(`${backport}game/exists/${roomId}`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  });\n  async function goNextPage(key) {\n    console.log(pageExists(key));\n    const go = await pageExists(key);\n    console.log(key);\n    if (go) {\n      navigate(`game/${key}`);\n    } else {\n      setTimeout(() => {\n        goNextPage(key);\n      }, 2000);\n    }\n  }\n  function nextPage(numplayers) {\n    const newKey = generateKey();\n    startGame(newKey, numplayers);\n    setloading(true);\n    goNextPage(newKey);\n  }\n  function starthandleClick() {\n    setstartGamePressed(true);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.startDiv,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: classes.title,\n      children: \" CARDUITIVE! \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), !startGamePressed && /*#__PURE__*/_jsxDEV(\"button\", {\n      className: classes.startButton,\n      onClick: starthandleClick,\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \" Start New Game !\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.startButton,\n      onClick: starthandleClick,\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \" Loading !\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }, this), !loading && startGamePressed && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"How many players?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: classes.startButton,\n        onClick: () => nextPage(2),\n        children: \"2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: classes.startButton,\n        onClick: () => nextPage(3),\n        children: \"3\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: classes.startButton,\n        onClick: () => nextPage(4),\n        children: \"4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }, this), \"\\xA0\", /*#__PURE__*/_jsxDEV(\"div\", {\n      children: !modalIsOpen && /*#__PURE__*/_jsxDEV(\"button\", {\n        className: classes.howToPlayButton,\n        onClick: handelHowToPlay,\n        children: \"How to Play\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this), modalIsOpen && /*#__PURE__*/_jsxDEV(HowToPlay, {\n      onExit: closeModalHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 23\n    }, this), modalIsOpen && /*#__PURE__*/_jsxDEV(Backdrop, {\n      onExit: closeModalHandler,\n      onClose: closeModalHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n}\n_s(StartPage, \"CBfB3hxSCTXamDOv1xQ3yyeP2mw=\", false, function () {\n  return [useNavigate];\n});\n_c = StartPage;\nexport default StartPage;\nvar _c;\n$RefreshReg$(_c, \"StartPage\");","map":{"version":3,"names":["React","useState","useNavigate","classes","HowToPlay","Backdrop","jsxDEV","_jsxDEV","StartPage","_s","navigate","startGamePressed","setstartGamePressed","loading","setloading","modalIsOpen","setModalIsOpen","backport","process","env","REACT_APP_BACKPORT","handelHowToPlay","closeModalHandler","generateKey","key","possible","i","charAt","Math","floor","random","length","startGame","roomId","numberOfPlayers","fetch","method","headers","body","JSON","stringify","pageExists","goNextPage","console","log","go","setTimeout","nextPage","numplayers","newKey","starthandleClick","className","startDiv","children","title","fileName","_jsxFileName","lineNumber","columnNumber","startButton","onClick","type","howToPlayButton","onExit","onClose","_c","$RefreshReg$"],"sources":["/Users/Patrick/CodingFolder/Projects/psychic/frontend/src/components/StartPage.jsx"],"sourcesContent":["import { React, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport classes from './StartPage.module.css';\nimport HowToPlay from './HowToPlay';\nimport Backdrop from './Backdrop';\n\nfunction StartPage() {\n  const navigate = useNavigate();\n  const [startGamePressed, setstartGamePressed] = useState(false);\n  const [loading, setloading] = useState(false);\n  const [modalIsOpen, setModalIsOpen] = useState(false);\n\n  const backport =\n    process.env.REACT_APP_BACKPORT ||\n    'https://card-backend-bb5d6df47bd0.herokuapp.com/';\n\n  function handelHowToPlay() {\n    setModalIsOpen(true);\n  }\n\n  function closeModalHandler() {\n    setModalIsOpen(false);\n  }\n\n  const generateKey = () => {\n    let key = '';\n    const possible =\n      'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n    for (let i = 0; i < 5; i += 1) {\n      key += possible.charAt(Math.floor(Math.random() * possible.length));\n    }\n    return key;\n  };\n\n  const startGame = async (roomId, numberOfPlayers) => {\n    return fetch(`${backport}game/create/${roomId}`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({ numberOfPlayers }),\n    });\n  };\n\n  const pageExists = async (roomId) =>\n    fetch(`${backport}game/exists/${roomId}`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    });\n\n  async function goNextPage(key) {\n    console.log(pageExists(key));\n    const go = await pageExists(key);\n    console.log(key);\n    if (go) {\n      navigate(`game/${key}`);\n    } else {\n      setTimeout(() => {\n        goNextPage(key);\n      }, 2000);\n    }\n  }\n\n  function nextPage(numplayers) {\n    const newKey = generateKey();\n    startGame(newKey, numplayers);\n    setloading(true);\n    goNextPage(newKey);\n  }\n\n  function starthandleClick() {\n    setstartGamePressed(true);\n  }\n\n  return (\n    <div className={classes.startDiv}>\n      <h1 className={classes.title}> CARDUITIVE! </h1>\n      {!startGamePressed && (\n        <button className={classes.startButton} onClick={starthandleClick}>\n          <h2> Start New Game !</h2>\n        </button>\n      )}\n      {loading && (\n        <div className={classes.startButton} onClick={starthandleClick}>\n          <h2> Loading !</h2>\n        </div>\n      )}\n      {!loading && startGamePressed && (\n        <div>\n          <h2>How many players?</h2>\n          <button type='button' className={classes.startButton} onClick={() => nextPage(2)}>\n            2\n          </button>\n          <button type='button' className={classes.startButton} onClick={() => nextPage(3)}>\n            3\n          </button>\n          <button type='button' className={classes.startButton} onClick={() => nextPage(4)}>\n            4\n          </button>\n        </div>\n      )}\n      Â \n      <div>\n        {!modalIsOpen && (\n          <button className={classes.howToPlayButton} onClick={handelHowToPlay}>\n            How to Play\n          </button>\n        )}\n      </div>\n      {modalIsOpen && <HowToPlay onExit={closeModalHandler} />}\n      {modalIsOpen && (\n        <Backdrop onExit={closeModalHandler} onClose={closeModalHandler} />\n      )}\n    </div>\n  );\n}\nexport default StartPage;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}