{"ast":null,"code":"var _jsxFileName = \"/Users/Patrick/CodingFolder/Projects/psychic/frontend/src/components/PlayingGame.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PlayingGame(props) {\n  _s();\n  const {\n    roomId\n  } = useParams();\n  const userID = localStorage.getItem('userID');\n  console.log(roomId);\n  console.log(userID);\n  const [roomData, setRoomData] = useState(null);\n  function createRoom(roomId) {\n    return fetch(`http://localhost:3001/game/create/${roomId}`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n  }\n  const createRoomm = async () => {\n    if (roomId) {\n      try {\n        const response = await fetch(`/game/create/${roomId}`, {\n          method: 'POST'\n        });\n        if (response.ok) {\n          console.log('Room created successfully');\n        } else {\n          console.error('Failed to create room');\n        }\n      } catch (error) {\n        console.error('Error creating room:', error);\n      }\n    }\n  };\n  const fetchRoomData = async roomId => {\n    return fetch(`http://localhost:3001/game/data/${roomId}`).then(response => {\n      if (!response.ok) {\n        throw new Error(`HTTP error! status : ${response.status}`);\n      }\n      return response.json();\n    }).catch(e => {\n      console.error('There was a problem with your fetch operation ' + e.message);\n    });\n  };\n  function deleteRoom(roomId) {\n    return fetch(`http://localhost:3001/message/${roomId}`, {\n      method: 'DELETE'\n    });\n  }\n  useEffect(() => {\n    console.log(`Room ID : ${roomId}`);\n    const intervalID = setInterval(() => {\n      fetchRoomData(roomId).then(setRoomData);\n    }, 500);\n    return () => clearInterval(intervalID);\n  }, [roomId]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"In the Game Now\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\" Game Room : \", roomId]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\" User ID : \", userID, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \" Cards : \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Numbers 1: \", roomData.numbers1.join(', ')]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Numbers 2: \", roomData.numbers2.join(', ')]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Lost: \", String(roomData.lost)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Won: \", String(roomData.won)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => createRoom(roomId),\n      children: \"Create the new Room.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 3\n  }, this);\n}\n_s(PlayingGame, \"fryYPVzr+JQ8iK03IyN+n41UDNc=\", false, function () {\n  return [useParams];\n});\n_c = PlayingGame;\nexport default PlayingGame;\nvar _c;\n$RefreshReg$(_c, \"PlayingGame\");","map":{"version":3,"names":["React","useEffect","useState","useParams","jsxDEV","_jsxDEV","PlayingGame","props","_s","roomId","userID","localStorage","getItem","console","log","roomData","setRoomData","createRoom","fetch","method","headers","createRoomm","response","ok","error","fetchRoomData","then","Error","status","json","catch","e","message","deleteRoom","intervalID","setInterval","clearInterval","children","fileName","_jsxFileName","lineNumber","columnNumber","numbers1","join","numbers2","String","lost","won","onClick","_c","$RefreshReg$"],"sources":["/Users/Patrick/CodingFolder/Projects/psychic/frontend/src/components/PlayingGame.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\n\n\n\nfunction PlayingGame(props){\n\n  const { roomId }= useParams();\n  const userID = localStorage.getItem('userID');\n  console.log(roomId);\n  console.log(userID);\n\n\n\n  const [roomData, setRoomData] = useState(null);\n\n\n\n  function createRoom(roomId) {\n    return fetch(`http://localhost:3001/game/create/${roomId}`, {\n      method: 'POST',\n      headers: {\n        'Content-Type' : 'application/json',\n      },\n    });\n  }\n\n\n  const createRoomm = async () => {\n    if (roomId) {\n      try {\n        const response = await fetch(`/game/create/${roomId}`, {\n          method: 'POST',\n        });\n  \n        if (response.ok) {\n          console.log('Room created successfully');\n        } else {\n          console.error('Failed to create room');\n        }\n      } catch (error) {\n        console.error('Error creating room:', error);\n      }\n    }\n  };\n\n\n  const fetchRoomData = async (roomId) => {\n    return fetch(`http://localhost:3001/game/data/${roomId}`)\n    .then(response => {\n      if (!response.ok){\n        throw new Error(`HTTP error! status : ${response.status}`);\n      }\n      return response.json();\n    })  \n    .catch(e => {\n      console.error('There was a problem with your fetch operation ' + e.message);\n    });\n  }\n    \n\n  function deleteRoom(roomId) {\n    return fetch(`http://localhost:3001/message/${roomId}`, {\n      method: 'DELETE',\n    });\n  }\n\n  useEffect(() =>  {\n\n    console.log(`Room ID : ${roomId}`);\n    const intervalID = setInterval(() => {\n      fetchRoomData(roomId).then(setRoomData);\n    }, 500);\n    return () => clearInterval(intervalID);\n  }, [roomId]);\n\n \n\nreturn (\n  <div> \n    <h1>In the Game Now</h1>\n    <h2> Game Room : {roomId}</h2>\n    <h2> User ID : {userID} </h2>\n    <h2> Cards : </h2>\n\n    <h2>Numbers 1: {roomData.numbers1.join(', ')}</h2>\n    <h2>Numbers 2: {roomData.numbers2.join(', ')}</h2>\n    <h2>Lost: {String(roomData.lost)}</h2>\n    <h2>Won: {String(roomData.won)}</h2>\n\n    \n    \n    \n\n    < button onClick={() => createRoom(roomId)}>Create the new Room.</button>\n\n    \n  </div>\n\n);\n}\nexport default PlayingGame;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}