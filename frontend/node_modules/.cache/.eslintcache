[{"/Users/Patrick/CodingFolder/Projects/psychic/frontend/src/index.js":"1","/Users/Patrick/CodingFolder/Projects/psychic/frontend/src/App.js":"2","/Users/Patrick/CodingFolder/Projects/psychic/frontend/src/components/StartPage.js":"3","/Users/Patrick/CodingFolder/Projects/psychic/frontend/src/components/PlayingGame.js":"4","/Users/Patrick/CodingFolder/Projects/psychic/frontend/src/components/Backdrop.js":"5","/Users/Patrick/CodingFolder/Projects/psychic/frontend/src/components/Countdown.js":"6","/Users/Patrick/CodingFolder/Projects/psychic/frontend/src/components/ReadyButton.js":"7","/Users/Patrick/CodingFolder/Projects/psychic/frontend/src/components/CopyLink.js":"8","/Users/Patrick/CodingFolder/Projects/psychic/frontend/src/components/LostPage.js":"9","/Users/Patrick/CodingFolder/Projects/psychic/frontend/src/components/WonPage.js":"10","/Users/Patrick/CodingFolder/Projects/psychic/frontend/src/components/Level.js":"11","/Users/Patrick/CodingFolder/Projects/psychic/frontend/src/components/InGameRendering.js":"12","/Users/Patrick/CodingFolder/Projects/psychic/frontend/src/components/BeforeGameStarts.js":"13","/Users/Patrick/CodingFolder/Projects/psychic/frontend/src/components/HowToPlay.js":"14"},{"size":348,"mtime":1692158898992,"results":"15","hashOfConfig":"16"},{"size":375,"mtime":1692158898880,"results":"17","hashOfConfig":"16"},{"size":3405,"mtime":1692401779402,"results":"18","hashOfConfig":"16"},{"size":6390,"mtime":1692410597501,"results":"19","hashOfConfig":"16"},{"size":121,"mtime":1692158898883,"results":"20","hashOfConfig":"16"},{"size":443,"mtime":1692400403142,"results":"21","hashOfConfig":"16"},{"size":325,"mtime":1692405723937,"results":"22","hashOfConfig":"16"},{"size":836,"mtime":1692401257933,"results":"23","hashOfConfig":"16"},{"size":525,"mtime":1692158898935,"results":"24","hashOfConfig":"16"},{"size":472,"mtime":1692158898982,"results":"25","hashOfConfig":"16"},{"size":262,"mtime":1692400683989,"results":"26","hashOfConfig":"16"},{"size":1962,"mtime":1692404627183,"results":"27","hashOfConfig":"16"},{"size":1086,"mtime":1692401255275,"results":"28","hashOfConfig":"16"},{"size":1025,"mtime":1692401929424,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"zpowak",{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42"},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/Patrick/CodingFolder/Projects/psychic/frontend/src/index.js",[],[],"/Users/Patrick/CodingFolder/Projects/psychic/frontend/src/App.js",[],[],"/Users/Patrick/CodingFolder/Projects/psychic/frontend/src/components/StartPage.js",["73","74","75","76","77"],[],"/Users/Patrick/CodingFolder/Projects/psychic/frontend/src/components/PlayingGame.js",["78","79","80","81","82","83","84"],[],"import React, { useEffect, useState } from \"react\";\nimport { Link, json, useParams } from \"react-router-dom\";\nimport { Navigate, useNavigate, useLocation } from \"react-router-dom\";\nimport classes from \"./PlayingGame.module.css\";\n\n\nimport LostPage from \"./LostPage\";\nimport WonPage from \"./WonPage\";\nimport InGameRendering from \"./InGameRendering\";\nimport BeforeGameStarts from \"./BeforeGameStarts\";\n\nfunction PlayingGame(props) {\n  const { roomId } = useParams();\n  const [playerID, setPlayerID] = useState(0);\n  const [ready, setReady] = useState(false);\n  const [isCopied, setIsCopied] = useState(false);\n  const [numberOfPlayers, setnumberOfPlayers] = useState(false);\n  const [roomData, setRoomData] = useState(null);\n  const location = useLocation();\n  const [didCountDown, setdidCountDown] = useState(false);\n\n  const [show1, setshow1] = useState(false);\n  const [show2, setshow2] = useState(false);\n  const [show3, setshow3] = useState(false);\n\n  const [error, seterror] = useState(null);\n\n  const frontport = process.env.REACT_APP_FRONTPORT || \"http://localhost/3000/\";\n  const backport = process.env.REACT_APP_BACKPORT || \"http://localhost/3001\";\n\n  let navigate = useNavigate();\n\n  const fetchRoomData = async (roomId) => {\n    return fetch(`${backport}game/data/${roomId}`)\n      .then((response) => {\n        if (!response.ok) {\n          throw new Error(`HTTP error! status : ${response.status}`);\n        }\n        return response.json();\n      })\n      .catch((e) => {\n        seterror(e.message);\n        console.error(\n          \"There was a problem with your fetch operation \" + e.message\n        );\n      });\n  };\n\n  const addReadyPerson = async (roomId) => {\n    try {\n      const response = await fetch(`${backport}game/ready/${roomId}`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      }).catch((e) => console.error(\"Error:\", e));\n      if (!response.ok) {\n        throw new Error(`HTTP error! Status : ${response}`);\n      }\n      const responseData = await response.json();\n      const varPlayerID = responseData.readyPlayersCount;\n      setPlayerID(varPlayerID - 1);\n    } catch (e) {\n      console.error(\"Error:\", e);\n      throw e;\n    }\n  };\n\n  useEffect(() => {\n    console.log(\"player ID: \");\n    console.log(playerID);\n  }, [playerID]);\n\n  const removeNumberFromArray = async (roomId, playerId, numberToRemove) => {\n    return fetch(`${backport}game/data/${roomId}`, {\n      method: \"PATCH\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ playerId, numberToRemove }),\n    });\n  };\n\n  const setLevel = async (roomId, level) => {\n    return fetch(`${backport}game/resetLevel/${roomId}`, {\n      method: \"PATCH\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ level }),\n    });\n  };\n\n  const startGame = async (roomId, numberOfPlayers) => {\n    return fetch(`${backport}game/create/${roomId}`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ numberOfPlayers }),\n    });\n  };\n\n  const resetReadyStatus = async (roomId) => {\n    return fetch(`${backport}/game/resetReady/${roomId}`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    });\n  };\n\n  useEffect(() => {\n    const intervalID = setInterval(() => {\n      fetchRoomData(roomId).then((data) => {\n        if (data) {\n        setRoomData(data);\n        if (data.playersReady === data.playerCount) {\n          if (!didCountDown) {\n            countDown();\n            setdidCountDown(true);\n          }\n        }\n      } \n      });\n    }, 120);\n    return () => clearInterval(intervalID);\n  }, [roomId, numberOfPlayers, countDown]);\n\n  function handleClickReady() {\n    addReadyPerson(roomId);\n    setReady(true);\n    setdidCountDown(false);\n  }\n\n  async function handelPlayAgain() {\n    setLevel(roomId, 1);\n    startGame(roomId, numberOfPlayers);\n  }\n\n  async function handelContinue() {\n    setLevel(roomId, roomData.level + 1);\n    startGame(roomId, numberOfPlayers);\n  }\n\n  function handleCopyClick() {\n    setIsCopied(true);\n    setTimeout(() => setIsCopied(false), 2000);\n  }\n\n  function countDown() {\n    setshow3(true);\n    setTimeout(() => {\n      setshow3(false);\n      setshow2(true);\n    }, 1000);\n    setTimeout(() => {\n      setshow2(false);\n      setshow1(true);\n    }, 2000);\n    setTimeout(() => {\n      setshow1(false);\n    }, 3000);\n    setTimeout(() => setReady(false), 4000);\n    setTimeout(() => setIsCopied(false), 5000);\n    setdidCountDown(true);\n  }\n\n  if (error) {\n    return (\n      <div>\n        <h1>Error : {error} </h1>\n        <Link className={classes.link} to={frontport}>Return to home</Link>\n      </div>\n    );\n  }\n\n  if (roomData && roomData.won) {\n    return (\n      <WonPage\n        won={roomData.won}\n        level={roomData.level}\n        handelContinue={handelContinue}\n      />\n    );\n  }\n\n  if (roomData && roomData.lost) {\n    return (\n      <LostPage\n        lost={roomData.lost}\n        level={roomData.level}\n        handelPlayAgain={handelPlayAgain}\n        lastPlayedCard={roomData.lastPlayedCard}\n      />\n    );\n  }\n\n  if (roomData && !roomData.lost && roomData.gamestarted) {\n    return (\n      <BeforeGameStarts\n        roomData={roomData}\n        isCopied={isCopied}\n        handleCopyClick={handleCopyClick}\n        ready={ready}\n        handleClickReady={handleClickReady}\n        show1={show1}\n        show2={show2}\n        show3={show3}\n      />\n    );\n  }\n\n  return (\n    <div>\n      <div>\n        {roomData ? (\n          <>\n            <BeforeGameStarts\n              roomData={roomData}\n              isCopied={isCopied}\n              handleCopyClick={handleCopyClick}\n              ready={ready}\n              handleClickReady={handleClickReady}\n              show1={show1}\n              show2={show2}\n              show3={show3}\n            />\n\n            <InGameRendering\n              roomData={roomData}\n              show1={show1}\n              show2={show2}\n              show3={show3}\n              removeNumberFromArray={removeNumberFromArray}\n              playerID={playerID}\n              roomId={roomId}\n            />\n          </>\n        ) : (\n          <div>Loading...</div>\n        )}\n      </div>\n    </div>\n  );\n}\nexport default PlayingGame;\n","/Users/Patrick/CodingFolder/Projects/psychic/frontend/src/components/Backdrop.js",[],[],"/Users/Patrick/CodingFolder/Projects/psychic/frontend/src/components/Countdown.js",[],[],"/Users/Patrick/CodingFolder/Projects/psychic/frontend/src/components/ReadyButton.js",[],[],"/Users/Patrick/CodingFolder/Projects/psychic/frontend/src/components/CopyLink.js",[],[],"/Users/Patrick/CodingFolder/Projects/psychic/frontend/src/components/LostPage.js",[],[],"/Users/Patrick/CodingFolder/Projects/psychic/frontend/src/components/WonPage.js",[],[],"/Users/Patrick/CodingFolder/Projects/psychic/frontend/src/components/Level.js",[],[],"/Users/Patrick/CodingFolder/Projects/psychic/frontend/src/components/InGameRendering.js",["85","86"],[],"/Users/Patrick/CodingFolder/Projects/psychic/frontend/src/components/BeforeGameStarts.js",[],[],"/Users/Patrick/CodingFolder/Projects/psychic/frontend/src/components/HowToPlay.js",[],[],{"ruleId":"87","severity":1,"message":"88","line":2,"column":10,"nodeType":"89","messageId":"90","endLine":2,"endColumn":18},{"ruleId":"87","severity":1,"message":"91","line":11,"column":10,"nodeType":"89","messageId":"90","endLine":11,"endColumn":19},{"ruleId":"87","severity":1,"message":"92","line":11,"column":21,"nodeType":"89","messageId":"90","endLine":11,"endColumn":33},{"ruleId":"87","severity":1,"message":"93","line":15,"column":9,"nodeType":"89","messageId":"90","endLine":15,"endColumn":18},{"ruleId":"87","severity":1,"message":"94","line":31,"column":11,"nodeType":"89","messageId":"90","endLine":31,"endColumn":14},{"ruleId":"87","severity":1,"message":"95","line":2,"column":16,"nodeType":"89","messageId":"90","endLine":2,"endColumn":20},{"ruleId":"87","severity":1,"message":"88","line":3,"column":10,"nodeType":"89","messageId":"90","endLine":3,"endColumn":18},{"ruleId":"87","severity":1,"message":"96","line":17,"column":27,"nodeType":"89","messageId":"90","endLine":17,"endColumn":45},{"ruleId":"87","severity":1,"message":"97","line":19,"column":9,"nodeType":"89","messageId":"90","endLine":19,"endColumn":17},{"ruleId":"87","severity":1,"message":"98","line":31,"column":7,"nodeType":"89","messageId":"90","endLine":31,"endColumn":15},{"ruleId":"87","severity":1,"message":"99","line":104,"column":9,"nodeType":"89","messageId":"90","endLine":104,"endColumn":25},{"ruleId":"100","severity":1,"message":"101","line":128,"column":6,"nodeType":"102","endLine":128,"endColumn":42,"suggestions":"103"},{"ruleId":"104","severity":1,"message":"105","line":26,"column":30,"nodeType":"106","messageId":"107","endLine":26,"endColumn":32},{"ruleId":"104","severity":1,"message":"108","line":41,"column":28,"nodeType":"106","messageId":"107","endLine":41,"endColumn":30},"no-unused-vars","'Navigate' is defined but never used.","Identifier","unusedVar","'modelOpen' is assigned a value but never used.","'setmodalOpen' is assigned a value but never used.","'frontport' is assigned a value but never used.","'url' is assigned a value but never used.","'json' is defined but never used.","'setnumberOfPlayers' is assigned a value but never used.","'location' is assigned a value but never used.","'navigate' is assigned a value but never used.","'resetReadyStatus' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'didCountDown' and 'fetchRoomData'. Either include them or remove the dependency array.","ArrayExpression",["109"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","Expected '===' and instead saw '=='.",{"desc":"110","fix":"111"},"Update the dependencies array to be: [roomId, numberOfPlayers, countDown, fetchRoomData, didCountDown]",{"range":"112","text":"113"},[3758,3794],"[roomId, numberOfPlayers, countDown, fetchRoomData, didCountDown]"]