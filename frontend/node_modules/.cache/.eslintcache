[{"/Users/Patrick/CodingFolder/Projects/psychic/frontend/src/index.js":"1","/Users/Patrick/CodingFolder/Projects/psychic/frontend/src/App.js":"2","/Users/Patrick/CodingFolder/Projects/psychic/frontend/src/components/StartPage.js":"3","/Users/Patrick/CodingFolder/Projects/psychic/frontend/src/components/PlayingGame.js":"4","/Users/Patrick/CodingFolder/Projects/psychic/frontend/src/components/Modal.js":"5","/Users/Patrick/CodingFolder/Projects/psychic/frontend/src/components/Backdrop.js":"6"},{"size":346,"mtime":1689199457492,"results":"7","hashOfConfig":"8"},{"size":378,"mtime":1690490329341,"results":"9","hashOfConfig":"8"},{"size":3318,"mtime":1690494868178,"results":"10","hashOfConfig":"8"},{"size":7190,"mtime":1690504620850,"results":"11","hashOfConfig":"8"},{"size":1052,"mtime":1690492708401,"results":"12","hashOfConfig":"8"},{"size":122,"mtime":1690488978845,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","suppressedMessages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"17"},"adqfzm",{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","suppressedMessages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27"},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/Patrick/CodingFolder/Projects/psychic/frontend/src/index.js",[],[],[],"/Users/Patrick/CodingFolder/Projects/psychic/frontend/src/App.js",[],[],"/Users/Patrick/CodingFolder/Projects/psychic/frontend/src/components/StartPage.js",["34","35","36","37","38"],[],"/Users/Patrick/CodingFolder/Projects/psychic/frontend/src/components/PlayingGame.js",["39","40","41","42","43","44","45","46","47"],[],"import React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { Navigate, useNavigate, useLocation } from 'react-router-dom';\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\nimport classes from './PlayingGame.module.css';\n\n\n\n\nfunction PlayingGame(props){\n\n  const { roomId }= useParams();\n  const [player,setPlayer] = useState(0);\n  const [ready, setReady]  = useState(false);\n  const [isCopied, setIsCopied] = useState(false);\n  const [numberOfPlayers, setnumberOfPlayers] = useState(false);\n  const [roomData, setRoomData] = useState(null);\n  const location  = useLocation();\n  const [didCountDown, setdidCountDown] = useState(false);\n\n  const [show1, setshow1] = useState(false);\n  const [show2, setshow2] = useState(false);\n  const [show3, setshow3] = useState(false);\n\n\n\n  const frontport = process.env.REACT_APP_FRONTPORT || 'http://localhost/3000/';\n  const backport =  process.env.REACT_APP_BACKPORT || 'http://localhost/3001'\n\n  let navigate = useNavigate();\n\n\n\n\n \n  const fetchRoomData = async (roomId ) => {\n    return fetch(`${backport}game/data/${roomId}`)\n    .then(response => {\n      if (!response.ok){\n        throw new Error(`HTTP error! status : ${response.status}`);\n      }\n      return response.json();\n    })  \n    .catch(e => {\n      console.error('There was a problem with your fetch operation ' + e.message);\n    });\n  }\n\n  const addReadyPerson = async (roomId) => {\n    return fetch(`${backport}game/ready/${roomId}`, {\n      method: 'POST',\n      headers: {\n        'Content-Type' : 'application/json',\n      },\n    }).catch(e => console.error('Error:', e));\n  }\n\n  const makeReady = async (roomId, playerId) => {\n    setPlayer(roomData.playersReady);\n    return fetch(`${backport}game/setReady/${roomId}`, {\n      method: 'PATCH',\n      headers: {\n          'Content-Type' : 'application/json',\n      },\n      body: JSON.stringify({ playerId }),\n  });\n  }\n\n  const removeNumberFromArray = async (roomId, playerId, numberToRemove) => {\n    return fetch(`${backport}game/data/${roomId}`, {\n        method: 'PATCH',\n        headers: {\n            'Content-Type' : 'application/json',\n        },\n        body: JSON.stringify({ playerId, numberToRemove }),\n    });\n  }\n\nconst setLevel = async (roomId, level) => {\n  return fetch(`${backport}game/resetLevel/${roomId}`, {\n    method: 'PATCH',\n    headers: {\n        'Content-Type' : 'application/json',\n    },\n    body: JSON.stringify({ level }),\n});\n}\n\n\n\nconst startGame = async (roomId, numberOfPlayers) => {\n  return fetch(`${backport}game/create/${roomId}`, {\n    method: 'POST',\n    headers: {\n      'Content-Type' : 'application/json',\n    },\n    body: JSON.stringify({ numberOfPlayers }),\n  });\n}\n\nconst resetReadyStatus = async (roomId) => {\n  return fetch(`${backport}/game/resetReady/${roomId}`, {\n    method: 'POST',\n    headers: {\n      'Content-Type' : 'application/json',\n    },\n  });\n}\n\n\nuseEffect(() =>  {\n  const intervalID = setInterval(() => {\n    fetchRoomData(roomId)\n      .then(data => {\n        setRoomData(data);\n        if (data.playersReady === data.playerCount) {\n          if (!didCountDown) {\n            countDown();\n            setdidCountDown(true);\n          }\n        }\n      });\n  }, 120);\n\n  return () => clearInterval(intervalID);\n}, [roomId, numberOfPlayers, countDown]); \n\n\n\n\n  function handleClickReady(){\n    addReadyPerson(roomId);\n    makeReady(roomId, player);\n    setReady(true);\n    setdidCountDown(false);\n    setTimeout(() => setReady(false), 5000);\n  }\n\n  async function handelPlayAgain(){\n    setLevel(roomId,1);\n    startGame(roomId, numberOfPlayers);\n    \n  }\n\n  async function handelContinue(){\n    startGame(roomId, numberOfPlayers); \n  }\n\n  function handleCopyClick() {\n    setIsCopied(true);\n    setTimeout(() => setIsCopied(false), 2000);\n  }\n\n  function countDown(){\n    setshow3(true);\n    setTimeout(() => {\n      setshow3(false);\n      setshow2(true);\n    }, 1000);\n    setTimeout(() => {\n      setshow2(false);\n      setshow1(true);\n    }, 2000);\n    setTimeout(() => {\n      setshow1(false);\n    }, 3000);\n    \n    \n    setTimeout(() => setIsCopied(false), 5000);\n    setdidCountDown(true);\n  }\n\n\n\nreturn (\n\n  <div> \n    <div>\n\n    \n\n    \n    {roomData ? (\n    <>\n    {roomData.lost && <div className={classes.failureDiv}>\n        <h1 className= {classes.failure}>YOU LOSE</h1>\n        <h2 className= {classes.levelTag}>Level {roomData.level}</h2>\n        <button className = {classes.playAgain} onClick={handelPlayAgain}> Play again? </button>\n    </div>}\n\n    {roomData.won && !roomData.lost && <div className={classes.winDiv}>\n        <h1 className= {classes.win}>You Win!</h1>\n        <h2 className= {classes.levelTag}>Level {roomData.level}</h2>\n        <button className = {classes.continueButton} onClick={handelContinue}> Continue </button>\n    </div>}\n\n    {!roomData.won && !roomData.lost &&\n    <div>\n\n    <div className= {classes.levelTag}>\n      <h1 >Level {roomData.level}...</h1>\n    </div>\n\n    { !roomData.gameStarted &&  <div className={classes.readybuttonDiv}>\n      \n      <CopyToClipboard  className={classes.readybuttonDiv} text={`${window.location.href}`} onCopy={handleCopyClick}>\n        <div className={classes.readybuttonDiv}>\n\n        <button >\n        <h2>{`${window.location.href}`}</h2>\n        Copy Link to Clipboard\n        </button>\n        </div>\n\n      </CopyToClipboard>\n      {isCopied && <span style={{color: 'red'}}>Copied!</span>}\n    </div>}\n\n\n    { !ready && !roomData?.players[roomData?.readyPlayers]?.isReady  && !roomData.gameStarted && <div className = {classes.readybuttonDiv}>\n      <button className={classes.readyButton} onClick={handleClickReady}>Ready</button> \n      </div> }\n\n      {roomData.gameStarted && show3 && <div>\n      <div  className = {classes.countDown}> 3 </div>\n      </div>\n      }\n      {roomData.gameStarted && show2 && <div>\n      <div  className = {classes.countDown}> 2 </div>\n      </div>\n      }\n      {roomData.gameStarted && show1 && <div>\n      <div  className = {classes.countDown}> 1 </div>\n      </div>\n      }\n\n\n\n      { !show3 && !show2 && !show1 && roomData.gameStarted && <div>\n      \n      <div  className = {classes.lastPlayed} >\n      Last Played Card : {String(roomData.lastPlayedCard)}\n      </div>\n      \n      <div className = {classes.miniCardContainer}> \n      {roomData.players.map((playerData, index) => (\n      player != index &&\n      <div className={classes.miniCardPlayer} key={index}>\n        {playerData.numbers.map(( numIndex) => (\n          <div className={classes.miniCard} key={numIndex} >\n            ?\n          </div>\n        ))}\n      </div>\n    ))}\n      </div>\n\n\n      {roomData.players.map((playerData, index) => (\n      player == index &&\n      <div className={classes.cardContainer} key={index}>\n        {playerData.numbers.map((num, numIndex) => (\n          <button className={classes.card} key={numIndex} onClick={() => removeNumberFromArray(roomId, index, num)}>\n            {num}\n          </button>\n        ))}\n      </div>\n    ))}\n\n        </div>}\n      </div>}\n      </>\n    ) : (\n      <div>Loading...</div>\n    )}\n   \n  </div>\n  \n  \n</div>\n\n);\n}\nexport default PlayingGame;","/Users/Patrick/CodingFolder/Projects/psychic/frontend/src/components/Modal.js",[],[],"/Users/Patrick/CodingFolder/Projects/psychic/frontend/src/components/Backdrop.js",[],[],{"ruleId":"48","severity":1,"message":"49","line":2,"column":10,"nodeType":"50","messageId":"51","endLine":2,"endColumn":18},{"ruleId":"48","severity":1,"message":"52","line":13,"column":10,"nodeType":"50","messageId":"51","endLine":13,"endColumn":19},{"ruleId":"48","severity":1,"message":"53","line":13,"column":21,"nodeType":"50","messageId":"51","endLine":13,"endColumn":33},{"ruleId":"48","severity":1,"message":"54","line":18,"column":9,"nodeType":"50","messageId":"51","endLine":18,"endColumn":18},{"ruleId":"48","severity":1,"message":"55","line":31,"column":11,"nodeType":"50","messageId":"51","endLine":31,"endColumn":14},{"ruleId":"48","severity":1,"message":"49","line":3,"column":10,"nodeType":"50","messageId":"51","endLine":3,"endColumn":18},{"ruleId":"48","severity":1,"message":"56","line":16,"column":27,"nodeType":"50","messageId":"51","endLine":16,"endColumn":45},{"ruleId":"48","severity":1,"message":"57","line":18,"column":9,"nodeType":"50","messageId":"51","endLine":18,"endColumn":17},{"ruleId":"48","severity":1,"message":"54","line":27,"column":9,"nodeType":"50","messageId":"51","endLine":27,"endColumn":18},{"ruleId":"48","severity":1,"message":"58","line":30,"column":7,"nodeType":"50","messageId":"51","endLine":30,"endColumn":15},{"ruleId":"48","severity":1,"message":"59","line":101,"column":7,"nodeType":"50","messageId":"51","endLine":101,"endColumn":23},{"ruleId":"60","severity":1,"message":"61","line":126,"column":4,"nodeType":"62","endLine":126,"endColumn":40,"suggestions":"63"},{"ruleId":"64","severity":1,"message":"65","line":247,"column":14,"nodeType":"66","messageId":"67","endLine":247,"endColumn":16},{"ruleId":"64","severity":1,"message":"68","line":260,"column":14,"nodeType":"66","messageId":"67","endLine":260,"endColumn":16},"no-unused-vars","'Navigate' is defined but never used.","Identifier","unusedVar","'modelOpen' is assigned a value but never used.","'setmodalOpen' is assigned a value but never used.","'frontport' is assigned a value but never used.","'url' is assigned a value but never used.","'setnumberOfPlayers' is assigned a value but never used.","'location' is assigned a value but never used.","'navigate' is assigned a value but never used.","'resetReadyStatus' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'didCountDown' and 'fetchRoomData'. Either include them or remove the dependency array.","ArrayExpression",["69"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","Expected '===' and instead saw '=='.",{"desc":"70","fix":"71"},"Update the dependencies array to be: [roomId, numberOfPlayers, countDown, fetchRoomData, didCountDown]",{"range":"72","text":"73"},[3299,3335],"[roomId, numberOfPlayers, countDown, fetchRoomData, didCountDown]"]